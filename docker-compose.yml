version: "3"

name: portal

services:
  event-service:
    container_name: event-service
    restart: always
    build: ./event
    ports:
      - 8001:8000
    environment:
      - POSTGRES_HOST=postgres-event-service
      - POSTGRES_DB=event_service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - AUTH_SERVICE_URL=http://auth-service:8080
    depends_on:
      - postgres-event-service

  postgres-event-service:
    container_name: postgres-event-service
    image: postgres:16
    volumes:
      - ./event/dumps/main.sql:/docker-entrypoint-initdb.d/main.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=event_service
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust

  auth-service:
    container_name: auth-service
    restart: always
    build: ./auth
    ports:
      - 8080:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-auth-service:5432/mydatabase
      - SPRING_DATASOURCE_USERNAME=compose-postgres
      - SPRING_DATASOURCE_PASSWORD=compose-postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_HIBERNATE_DIALECT=postgresql
    depends_on:
      - postgres-auth-service

  postgres-auth-service:
    container_name: db
    image: postgres:16
    expose:
      - 5433
    volumes:
      - ./auth/dumps/main.sql:/docker-entrypoint-initdb.d/main.sql
    environment:
      - POSTGRES_DB=mydatabase
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=myuser
      - POSTGRES_HOST_AUTH_METHOD=trust

  frontend:
    container_name: frontend
    build: ./frontend
    volumes:
      - web:/app/dist

  nginx:
    image: nginx:1.25.4
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/mime.types:/etc/nginx/mime.types
      - web:/app/dist
    ports:
      - 8002:80
    depends_on:
      - event-service
      - auth-service
      - frontend

volumes:
    data:
        driver: local
    web: 
